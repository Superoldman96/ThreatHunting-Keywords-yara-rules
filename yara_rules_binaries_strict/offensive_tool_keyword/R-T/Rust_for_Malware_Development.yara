rule Rust_for_Malware_Development
{
    meta:
        description = "Detection patterns for the tool 'Rust-for-Malware-Development' taken from the ThreatHunting-Keywords github project"
        author = "@mthcht"
        reference = "https://github.com/mthcht/ThreatHunting-Keywords"
        tool = "Rust-for-Malware-Development"
        rule_category = "offensive_tool_keyword"

    strings:
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string1 = " --var-name=Smukx " nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string2 = "\"Custom DLL's are fking awesome !\"" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string3 = "\"DLL's are awesome ! Especially Exec in Rust\"" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string4 = "\"Malware resources needs to be free and wide\"" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string5 = "\"My moto is to leave malware resources for free " nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string6 = /\/dll_inject\.exe/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string7 = /\/Rust\-for\-Malware\-Development\.git/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string8 = /\[\+\]\sEncrypted\sShellcode\:\s/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string9 = /\[\+\]\sRemote\sCode\sExecuted\sSuccessfully\s\!/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string10 = /\\amsi_bypass\.rs/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string11 = /\\dll_inject\.exe/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string12 = /\\keycap\.log/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string13 = /\\keylog_tcp\.txt/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string14 = /\\keylogger\\src\\main\.rs/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string15 = /\\tcp_keylogger\.rs/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string16 = "48039def2e245f13ff409707a8b0018a402c58ec413ff81f947339203a615057" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string17 = "DLL INJECTION EXECUTED SUCCESSFULLY :D" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string18 = /dll_inject\.exe\s/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string19 = "f87f4efe743195b9995c713d8219ee7b495691262a16a200b49ae65f29eecec6" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string20 = "fd47e488528dfd7d415d1acf06332b12f2d40702328a467ef5d04c4c0a892fe6" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string21 = /filename\s\=\s\\"keycap\.log\\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string22 = /http\:\/\/127\.0\.0\.1\:8080\/shellcode\.bin/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string23 = "Keylogger started" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string24 = /msfshellcode_payload\.bin/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string25 = /Rc4\:\:new\(b\\"This\sis\snerdy\s\.\.\sim\sthe\skey\s\:\)\\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string26 = "secrect_key = \"iamafuckingnerd\"" nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string27 = "Whitecat18/Rust-for-Malware-Development" nocase ascii wide
        $metadata_regex_import = /\bimport\s+[a-zA-Z0-9_.]+\b/ nocase
        $metadata_regex_function = /function\s+[a-zA-Z_][a-zA-Z0-9_]*\(/ nocase ascii
        $metadata_regex_php = /<\?php/ nocase ascii
        $metadata_regex_createobject = /(CreateObject|WScript\.)/ nocase ascii
        $metadata_regex_script = /<script\b/ nocase ascii
        $metadata_regex_javascript = /(let\s|const\s|function\s|document\.|console\.)/ nocase ascii
        $metadata_regex_powershell = /(Write-Host|Get-[a-zA-Z]+|Invoke-|param\(|\.SYNOPSIS)/ nocase ascii
        $metadata_regex_batch = /@(echo\s|call\s|set\s|goto\s|if\s|for\s|rem\s)/ nocase ascii
        $metadata_regex_shebang = /^#!\// nocase ascii

    condition:
        ((filesize < 20MB and (
            uint16(0) == 0x5a4d or // Windows binary
            uint16(0) == 0x457f or // Linux ELF
            uint32be(0) == 0x7f454c46 or uint16(0) == 0xfeca or uint16(0) == 0xfacf or uint32(0) == 0xbebafeca or // macOS binary
            uint32(0) == 0x504B0304 or // Android APK, JAR
            uint32(0) == 0xCAFEBABE or // Java Class, Mach-O Universal Binary
            uint32(0) == 0x4D534346 or // Windows Cabinet File
            uint32(0) == 0xD0CF11E0 or // MSI Installer Package
            uint16(0) == 0x2321 or // Shebang (#!)
            uint16(0) == 0x3c3f // PHP and other script
        )) and 2 of ($string*)) or
        (filesize < 2MB and
        (
            2 of ($string*) and
            for any of ($metadata_regex_*) : ( @ <= 20000 )
        ))
}
